import { Markup } from "telegraf";
import { instructions } from "../../constants";
import { CustomContext } from "../../types";

async function getInstruction(ctx: CustomContext) {
  if ("text" in ctx.message) {
    const selectedInstruction = instructions.find(
      (instruction) => instruction.id === ctx.session.idSelectedCourse
    );

    const selectedPlatformName = ctx.message.text;

    if (!selectedInstruction?.platforms) {
      const message = `–í—ã–±—Ä–∞–Ω–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: <b>${selectedInstruction.name}</b>\n`;
      await ctx.replyWithHTML(message, {
        ...Markup.inlineKeyboard([
          Markup.button.url(
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
            selectedInstruction.linkOnInstructions
          ),
        ]),
      });

      return await ctx.reply(
        "–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, –Ω–∞–∂–º–∏ '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é'",
        Markup.keyboard([
          "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é üìÉ",
          "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Ü©Ô∏è",
        ]).resize()
      );
    }

    const selectedPlatform = selectedInstruction?.platforms.find(
      (platform) => platform.name === selectedPlatformName
    );

    const message =
      `–í—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å: <b>${selectedInstruction.name}</b>\n` +
      `–í—ã–±—Ä–∞–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: <b>${selectedPlatformName}</b>`;

    await ctx.replyWithHTML(message, {
      ...Markup.inlineKeyboard([
        Markup.button.url("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", selectedPlatform.linkOnInstruction),
      ]),
    });

    return await ctx.reply(
      "–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, –Ω–∞–∂–º–∏ '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é'",
      Markup.keyboard([
        "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é üìÉ",
        "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Ü©Ô∏è",
      ]).resize()
    );
  }
}

export default getInstruction;
